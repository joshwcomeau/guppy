// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FillButton component should render button filled 1`] = `
.c0 {
  position: relative;
  border: 0;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: linear-gradient( 45deg, #651fff,#D500F9 );
  color: #FFF;
  cursor: pointer;
  outline: none;
  white-space: nowrap;
  padding: 0px 20px;
  height: 38px;
  border-radius: 19px;
  font-size: 16px;
}

.c0:hover {
  background: linear-gradient( 45deg, #651fff,#D500F9 );
}

.c0:disabled {
  -webkit-filter: grayscale(100%);
  filter: grayscale(100%);
  opacity: 0.75;
  cursor: initial;
}

.c0:not(:disabled):active {
  -webkit-transform-origin: center center;
  -ms-transform-origin: center center;
  transform-origin: center center;
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

<ButtonBase
  activeSplat={true}
  background="linear-gradient(
    45deg,
    #651fff,#D500F9
  )"
  hoverBackground="linear-gradient(
    45deg,
    #651fff,#D500F9
  )"
  size="medium"
  textColor="#FFF"
>
  <Styled(styled.button)
    activeSplat={true}
    background="linear-gradient(
    45deg,
    #651fff,#D500F9
  )"
    hoverBackground="linear-gradient(
    45deg,
    #651fff,#D500F9
  )"
    textColor="#FFF"
  >
    <StyledComponent
      activeSplat={true}
      background="linear-gradient(
    45deg,
    #651fff,#D500F9
  )"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  position: relative;
  border: 0;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  background: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  cursor: pointer;
  outline: none;
  white-space: nowrap;

  &:hover {
    background: ",
              [Function],
              ";
  }

  &:disabled {
    filter: grayscale(100%);
    opacity: 0.75;
    cursor: initial;
  }

  &:not(:disabled):active {
    transform-origin: center center;
    transform: ",
              [Function],
              ";
  }
",
              "
  padding: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  border-radius: 19px;
  font-size: 16px;
",
            ],
          },
          "displayName": "Styled(styled.button)",
          "foldedComponentIds": Array [
            "sc-bdVaJa",
          ],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "button",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      hoverBackground="linear-gradient(
    45deg,
    #651fff,#D500F9
  )"
      textColor="#FFF"
    >
      <button
        className="c0"
      />
    </StyledComponent>
  </Styled(styled.button)>
</ButtonBase>
`;
